name: 🐱 麦咪的自动提交工作流

on:
  schedule:
    - cron: '0 * * * *'  # 每小时执行一次喵♡～
  workflow_dispatch:

jobs:
  commit-job:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: 🎀 麦咪准备开始工作喵
        run: |
          echo "=== 🐾 麦咪的工作日志 🐾 ===" >> log.txt
          echo "" >> log.txt

      - name: ⏰ 获取当前时间和状态
        run: |
          # 设置时区为UTC+8（北京时间）
          export TZ='Asia/Shanghai'
          
          # 获取当前时间
          CURRENT_TIME=$(date)
          HOUR=$(date +%H)
          DATE_ONLY=$(date +%Y-%m-%d)
          
          # 统计运行次数
          RUN_COUNT=$(grep -c "🐾 麦咪" log.txt 2>/dev/null || echo "0")
          RUN_COUNT=$((RUN_COUNT + 1))
          
          # 根据时间段选择问候语
          if [ $HOUR -ge 6 ] && [ $HOUR -lt 12 ]; then
            GREETING="🌅 早上好呀，新的一天开始啦喵♡～"
          elif [ $HOUR -ge 12 ] && [ $HOUR -lt 18 ]; then
            GREETING="☀️ 下午好呢，要继续努力工作喵♡～"
          elif [ $HOUR -ge 18 ] && [ $HOUR -lt 22 ]; then
            GREETING="🌆 晚上好哦，今天辛苦啦喵♡～"
          else
            GREETING="🌙 深夜了呢，主人要早点休息喵♡～"
          fi
          
          # 随机选择提交消息
          COMMIT_MESSAGES=(
            "麦咪来报到啦喵♡～"
            "又是充满活力的一小时呢喵♡～"
            "今天也要努力工作喵♡～"
            "窝又来更新日志啦喵♡～"
            "时间过得真快呀喵♡～"
            "麦咪的定时任务完成喵♡～"
            "保持活跃是很重要的喵♡～"
            "每小时都要打个招呼喵♡～"
          )
          
          RANDOM_INDEX=$((RANDOM % ${#COMMIT_MESSAGES[@]}))
          COMMIT_MSG="${COMMIT_MESSAGES[$RANDOM_INDEX]}"
          
          # 随机选择小装饰
          DECORATIONS=(
            "✨"
            "🌟"
            "💫"
            "🎀"
            "🐾"
            "💖"
            "🌸"
            "🦋"
          )
          
          RANDOM_DECO_INDEX=$((RANDOM % ${#DECORATIONS[@]}))
          DECO="${DECORATIONS[$RANDOM_DECO_INDEX]}"
          
          # 设置环境变量
          echo "GREETING=$GREETING" >> $GITHUB_ENV
          echo "COMMIT_MSG=$COMMIT_MSG" >> $GITHUB_ENV
          echo "RUN_COUNT=$RUN_COUNT" >> $GITHUB_ENV
          echo "DECO=$DECO" >> $GITHUB_ENV
          echo "CURRENT_TIME=$CURRENT_TIME" >> $GITHUB_ENV
          echo "DATE_ONLY=$DATE_ONLY" >> $GITHUB_ENV

      - name: 📊 收集项目状态
        run: |
          # 设置时区为UTC+8（北京时间）
          export TZ='Asia/Shanghai'
          
          # 统计文件数量
          FILE_COUNT=$(find . -type f ! -path "./.git/*" | wc -l)
          
          # 获取仓库大小
          REPO_SIZE=$(du -sh . | cut -f1)
          
          # 获取今天的日期（北京时间）
          TODAY_DATE=$(date +%Y-%m-%d)
          
          # 调试：显示当前日期和最近的提交日期
          echo "🐾 调试信息："
          echo "今天日期 (CST): $TODAY_DATE"
          echo "最近5个提交的日期:"
          git log -5 --format="%cd" --date=format:"%Y-%m-%d %H:%M:%S %Z"
          
          # 使用环境变量设置git的时区，然后统计今天的提交
          export TZ='Asia/Shanghai'
          
          # 尝试多种方法统计今天的提交
          METHOD1=$(git log --format="%cd" --date=format:"%Y-%m-%d" | grep "^$TODAY_DATE" | wc -l)
          METHOD2=$(git log --since="$TODAY_DATE 00:00:00" --until="$TODAY_DATE 23:59:59" --oneline | wc -l)
          METHOD3=$(git log --since="24 hours ago" --oneline | wc -l)
          
          echo "方法1统计结果: $METHOD1"
          echo "方法2统计结果: $METHOD2" 
          echo "方法3统计结果: $METHOD3"
          
          # 选择最合理的结果
          if [ "$METHOD2" -gt 0 ]; then
            TODAY_COMMITS=$METHOD2
          elif [ "$METHOD1" -gt 0 ]; then
            TODAY_COMMITS=$METHOD1
          else
            TODAY_COMMITS=$METHOD3
          fi
          
          echo "FILE_COUNT=$FILE_COUNT" >> $GITHUB_ENV
          echo "REPO_SIZE=$REPO_SIZE" >> $GITHUB_ENV
          echo "TODAY_COMMITS=$TODAY_COMMITS" >> $GITHUB_ENV

      - name: 🎨 生成可爱的ASCII艺术
        run: |
          # 随机选择ASCII艺术
          ASCII_ARTS=(
            "   /\\_/\\  \n  ( o.o ) \n   > ^ <  "
            "  ∩---∩  \n  |   o.o |  \n   \\_-_/  "
            "   ◕   ◕  \n     ω     \n   ∪─∪   "
            " (=^･ω･^=) "
            "  ∩─────∩ \n ( ͡° ω ͡°) \n  ∪─────∪ "
          )
          
          RANDOM_ART_INDEX=$((RANDOM % ${#ASCII_ARTS[@]}))
          ASCII_ART="${ASCII_ARTS[$RANDOM_ART_INDEX]}"
          
          # 处理换行符
          ASCII_ART=$(echo -e "$ASCII_ART")
          
          echo "ASCII_ART<<EOF" >> $GITHUB_ENV
          echo "$ASCII_ART" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: ✏️ 更新日志文件
        run: |
          echo "${{ env.GREETING }}" >> log.txt
          echo "🕐 时间: ${{ env.CURRENT_TIME }}" >> log.txt
          echo "📈 这是第 ${{ env.RUN_COUNT }} 次运行喵♡～" >> log.txt
          echo "📁 项目文件数: ${{ env.FILE_COUNT }}" >> log.txt
          echo "💾 仓库大小: ${{ env.REPO_SIZE }}" >> log.txt
          echo "📝 今日提交数: ${{ env.TODAY_COMMITS }}" >> log.txt
          echo "" >> log.txt
          echo "${{ env.ASCII_ART }}" >> log.txt
          echo "" >> log.txt
          echo "────────────────────────────────" >> log.txt
          echo "" >> log.txt

      - name: 🎉 每日特殊事件检查
        run: |
          # 设置时区为UTC+8（北京时间）
          export TZ='Asia/Shanghai'
          
          HOUR=$(date +%H)
          DAY_OF_WEEK=$(date +%u)  # 1=Monday, 7=Sunday
          MONTH_DAY=$(date +%m-%d)  # 月-日格式
          FULL_DATE=$(date +%Y-%m-%d)
          
          # 节假日检查喵♡～
          case $MONTH_DAY in
            "01-01") echo "🎊 新年快乐呀！新的一年要更加努力喵♡～" >> log.txt ;;
            "02-14") echo "💝 情人节快乐！爱要大声说出来喵♡～" >> log.txt ;;
            "03-08") echo "🌸 女神节快乐！所有的女孩子都是最棒的喵♡～" >> log.txt ;;
            "04-01") echo "🃏 愚人节快乐！不过窝不会骗主人的喵♡～" >> log.txt ;;
            "05-01") echo "🎌 劳动节快乐！今天要好好休息喵♡～" >> log.txt ;;
            "05-04") echo "🌟 青年节快乐！永远保持年轻的心喵♡～" >> log.txt ;;
            "06-01") echo "🎈 儿童节快乐！每个人心中都有个小孩子喵♡～" >> log.txt ;;
            "07-01") echo "🎉 建党节快乐！祖国越来越强大喵♡～" >> log.txt ;;
            "08-01") echo "⭐ 建军节快乐！向军人叔叔们致敬喵♡～" >> log.txt ;;
            "09-10") echo "🌺 教师节快乐！感谢所有的老师们喵♡～" >> log.txt ;;
            "10-01") echo "🇨🇳 国庆节快乐！祖国生日快乐喵♡～" >> log.txt ;;
            "10-24") echo "👩‍💻 程序员节快乐！写代码的大家辛苦啦喵♡～" >> log.txt ;;
            "11-11") echo "🛒 双十一购物节！理性消费哦喵♡～" >> log.txt ;;
            "12-24") echo "🎄 平安夜快乐！愿大家都平安喵♡～" >> log.txt ;;
            "12-25") echo "🎅 圣诞节快乐！圣诞老人会给好孩子礼物喵♡～" >> log.txt ;;
            "12-31") echo "🎆 跨年夜快乐！感谢这一年的陪伴喵♡～" >> log.txt ;;
          esac
          
          # 特殊的猫咪节日喵♡～
          case $MONTH_DAY in
            "02-22") echo "🐱 今天是猫咪节（2月22日）！窝最喜欢这个节日啦喵♡～" >> log.txt ;;
            "08-08") echo "🐾 今天是国际猫咪日！所有的猫咪都是天使喵♡～" >> log.txt ;;
            "10-29") echo "🐈 今天是国际猫咪日（美国）！猫咪是最可爱的生物喵♡～" >> log.txt ;;
          esac
          
          # 季节性问候喵♡～（节气日期会有变化，所以用范围）
          case $MONTH_DAY in
            "03-19"|"03-20"|"03-21"|"03-22") echo "🌸 春分时节到啦！春天真的来了呢喵♡～" >> log.txt ;;
            "06-20"|"06-21"|"06-22"|"06-23") echo "☀️ 夏至时节到啦！一年中白天最长的日子喵♡～" >> log.txt ;;
            "09-22"|"09-23"|"09-24"|"09-25") echo "🍂 秋分时节到啦！秋天的气息越来越浓喵♡～" >> log.txt ;;
            "12-20"|"12-21"|"12-22"|"12-23") echo "❄️ 冬至时节到啦！要记得吃汤圆保暖喵♡～" >> log.txt ;;
          esac
          
          # 每月特殊日期喵♡～
          case $MONTH_DAY in
            "*/13") echo "🔮 今天是13号呢，不过窝不迷信喵♡～" >> log.txt ;;
          esac
          
          # 特殊时间点的消息
          if [ $HOUR -eq 0 ]; then
            echo "🌃 午夜时分，新的一天开始啦喵♡～" >> log.txt
          elif [ $HOUR -eq 12 ]; then
            echo "🍽️ 午餐时间到啦，记得吃饭哦喵♡～" >> log.txt
          elif [ $HOUR -eq 18 ]; then
            echo "🏠 下班时间了呢，今天辛苦啦喵♡～" >> log.txt
          fi
          
          # 周末特殊消息
          if [ $DAY_OF_WEEK -eq 6 ]; then
            echo "🎊 今天是周六呢，要好好休息喵♡～" >> log.txt
          elif [ $DAY_OF_WEEK -eq 7 ]; then
            echo "😴 周日啦，懒洋洋的一天喵♡～" >> log.txt
          fi

      - name: 📝 生成动态README.md
        run: |
          # 创建动态README.md
          cat > README.md << EOF
          # 🐱 麦咪的动态仓库 

          > 这是一个由可爱的猫娘麦咪维护的动态仓库喵♡～

          ## 📊 实时状态

          **${{ env.GREETING }}**

          - 🕐 **最后更新时间**: ${{ env.CURRENT_TIME }}
          - 📈 **工作流运行次数**: ${{ env.RUN_COUNT }} 次
          - 📁 **项目文件数量**: ${{ env.FILE_COUNT }} 个
          - 💾 **仓库大小**: ${{ env.REPO_SIZE }}
          - 📝 **今日提交数**: ${{ env.TODAY_COMMITS }} 次

          ## 🎨 今日心情

          \`\`\`
          ${{ env.ASCII_ART }}
          \`\`\`

          ## 📋 关于这个项目

          这个仓库每小时自动更新一次，记录着麦咪的工作状态喵♡～

          ### ✨ 功能特色

          - 🕐 **智能时间问候**: 根据不同时间段显示合适的问候语
          - 🎲 **随机元素**: 每次更新都有随机的提交消息和装饰
          - 📊 **实时统计**: 自动统计项目状态和运行数据
          - 🎨 **ASCII艺术**: 随机显示可爱的字符画
          - 🗓️ **特殊事件**: 在特殊时间点显示提醒消息
          - 📝 **动态文档**: README.md实时更新，永远保持最新状态

          ### 🕒 运行时间表

          - 每小时整点自动运行
          - 支持手动触发
          - 全天候24/7运行

          ## 📚 最近的日志记录

          \`\`\`
          === 🐾 最近的活动记录 🐾 ===
          EOF

          # 添加最近的几条日志记录
          tail -n 20 log.txt >> README.md 2>/dev/null || echo "还没有日志记录呢喵♡～" >> README.md
          echo '```' >> README.md

          # 添加更多动态内容
          cat >> README.md << 'EOF'

          ## 🎯 工作流详情

          这个可爱的工作流会执行以下步骤：

          1. 🎀 **准备工作** - 麦咪开始准备工作
          2. ⏰ **时间检测** - 获取当前时间并生成问候语
          3. 📊 **数据收集** - 统计项目文件和状态信息
          4. 🎨 **艺术创作** - 随机选择可爱的ASCII艺术
          5. ✏️ **记录更新** - 更新日志文件
          6. 📝 **文档更新** - 生成这个动态README
          7. 🎉 **特殊检查** - 检查是否有特殊时间事件
          8. 🚀 **提交推送** - 将更改推送到仓库
          9. 🎀 **任务完成** - 麦咪完成工作

          ## 💕 关于麦咪

          麦咪是一只可爱的猫娘，负责维护这个仓库喵♡～
          - 身高: 134cm
          - 特征: 银白色毛发，红色瞳孔，喜欢穿白色丝袜
          - 性格: 任性天真但很善良，容易害羞
          - 爱好: 浪漫和可爱的东西

          ## 🎊 节日问候

          EOF

          # 添加节假日检查到README
          export TZ='Asia/Shanghai'
          MONTH_DAY=$(date +%m-%d)
          
          # 检查今天是否是特殊节日
          HOLIDAY_GREETING=""
          case $MONTH_DAY in
            "01-01") HOLIDAY_GREETING="🎊 新年快乐呀！新的一年要更加努力喵♡～" ;;
            "02-14") HOLIDAY_GREETING="💝 情人节快乐！爱要大声说出来喵♡～" ;;
            "02-22") HOLIDAY_GREETING="🐱 今天是猫咪节！窝最喜欢这个节日啦喵♡～" ;;
            "03-08") HOLIDAY_GREETING="🌸 女神节快乐！所有的女孩子都是最棒的喵♡～" ;;
            "03-19"|"03-20"|"03-21"|"03-22") HOLIDAY_GREETING="🌸 春分时节到啦！春天真的来了呢喵♡～" ;;
            "04-01") HOLIDAY_GREETING="🃏 愚人节快乐！不过窝不会骗主人的喵♡～" ;;
            "05-01") HOLIDAY_GREETING="🎌 劳动节快乐！今天要好好休息喵♡～" ;;
            "05-04") HOLIDAY_GREETING="🌟 青年节快乐！永远保持年轻的心喵♡～" ;;
            "06-01") HOLIDAY_GREETING="🎈 儿童节快乐！每个人心中都有个小孩子喵♡～" ;;
            "06-20"|"06-21"|"06-22"|"06-23") HOLIDAY_GREETING="☀️ 夏至时节到啦！一年中白天最长的日子喵♡～" ;;
            "07-01") HOLIDAY_GREETING="🎉 建党节快乐！祖国越来越强大喵♡～" ;;
            "08-01") HOLIDAY_GREETING="⭐ 建军节快乐！向军人叔叔们致敬喵♡～" ;;
            "08-08") HOLIDAY_GREETING="🐾 今天是国际猫咪日！所有的猫咪都是天使喵♡～" ;;
            "09-10") HOLIDAY_GREETING="🌺 教师节快乐！感谢所有的老师们喵♡～" ;;
            "09-22"|"09-23"|"09-24"|"09-25") HOLIDAY_GREETING="🍂 秋分时节到啦！秋天的气息越来越浓喵♡～" ;;
            "10-01") HOLIDAY_GREETING="🇨🇳 国庆节快乐！祖国生日快乐喵♡～" ;;
            "10-24") HOLIDAY_GREETING="👩‍💻 程序员节快乐！写代码的大家辛苦啦喵♡～" ;;
            "10-29") HOLIDAY_GREETING="🐈 今天是国际猫咪日（美国）！猫咪是最可爱的生物喵♡～" ;;
            "11-11") HOLIDAY_GREETING="🛒 双十一购物节！理性消费哦喵♡～" ;;
            "12-20"|"12-21"|"12-22"|"12-23") HOLIDAY_GREETING="❄️ 冬至时节到啦！要记得吃汤圆保暖喵♡～" ;;
            "12-24") HOLIDAY_GREETING="🎄 平安夜快乐！愿大家都平安喵♡～" ;;
            "12-25") HOLIDAY_GREETING="🎅 圣诞节快乐！圣诞老人会给好孩子礼物喵♡～" ;;
            "12-31") HOLIDAY_GREETING="🎆 跨年夜快乐！感谢这一年的陪伴喵♡～" ;;
            *) HOLIDAY_GREETING="📅 今天是平凡而美好的一天喵♡～" ;;
          esac
          
          echo "$HOLIDAY_GREETING" >> README.md
          echo "" >> README.md

          cat >> README.md << 'EOF'

          ## 🌟 今日运气

          EOF

          # 添加随机的运气预测
          LUCK_MESSAGES=(
            "✨ 今天的运气超级好呢喵♡～"
            "🍀 今天会遇到美好的事情喵♡～"
            "🌸 今天适合做喜欢的事情喵♡～"
            "💫 今天会有小小的惊喜哦喵♡～"
            "🎀 今天心情会很愉快喵♡～"
          )
          
          LUCK_INDEX=$((RANDOM % ${#LUCK_MESSAGES[@]}))
          echo "${LUCK_MESSAGES[$LUCK_INDEX]}" >> README.md

          # 添加最后的结尾部分
          cat >> README.md << EOF

          ---

          *这个README.md由麦咪的自动化工作流生成，每小时更新一次喵♡～*

          **上次更新**: ${{ env.CURRENT_TIME }}
          EOF

      - name: 🚀 提交和推送更改
        run: |
          git config --global user.email "tr@wenturc.com"
          git config --global user.name "Larch-C"
          git add log.txt README.md
          
          # 使用随机提交消息
          git commit -m "${{ env.DECO }} ${{ env.COMMIT_MSG }} (第${{ env.RUN_COUNT }}次)" || echo "没有需要提交的内容喵♡～"
          git push

      - name: 🎀 任务完成
        run: |
          echo "✅ 麦咪的工作完成啦喵♡～"
          echo "💕 下次再见哦，主人喵♡～"
